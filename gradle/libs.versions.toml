[versions]
kotlin = "1.8.21"
ksp = '1.8.21-1.0.11'

## SDK versions

wire = "4.8.1"

androidGradlePlugin = "8.0.2"
kotlinCompilerExtensionVersion = "1.4.7"
ideaGradlePluginExtension = "1.1.7"

coroutines = "1.7.1"
ktor = "2.3.2"
kermit = "2.0.0-RC4"
koin = "3.2.0"
spotless = "6.19.0"
ktlint = "0.49.1"

okHttpLoggingInterceptor = "4.11.0"
kmmbridge = "0.3.7"
atomicfu = "0.21.0"

sqlDelight = "2.0.0-alpha05"
kotlinxDatetime = "0.4.1"
skie = "0.4.18"
kmpSettings = "1.0.0"
kotlinInject = '0.6.1'

[libraries]
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-serialization-proto = { module = "io.ktor:ktor-serialization-kotlinx-protobuf", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

touchlab-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

wire-runtime-core = { module = "com.squareup.wire:wire-runtime", version.ref = "wire" }
wire-runtime-js = { module = "com.squareup.wire:wire-runtime-js", version.ref = "wire" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttpLoggingInterceptor" }

sqlDelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-js = { module = "app.cash.sqldelight:sqljs-driver", version.ref = "sqlDelight" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime"}

skie = { module = "co.touchlab.skie:configuration-annotations", version.ref = "skie"}

kmpSettings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "kmpSettings"}
kmpSettings-noArg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "kmpSettings"}

kotlinInject-compiler = { module = 'me.tatarka.inject:kotlin-inject-compiler-ksp', version.ref = 'kotlinInject' }
kotlinInject-runtime = { module = 'me.tatarka.inject:kotlin-inject-runtime', version.ref = 'kotlinInject' }

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
wire = { id = "com.squareup.wire", version.ref = "wire" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
kmmbridge = { id = "co.touchlab.faktory.kmmbridge", version.ref = "kmmbridge" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
ksp = { id = 'com.google.devtools.ksp', version.ref = 'ksp' }



[bundles]
common-ktor = [
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-client-serialization-json",
    "ktor-client-serialization-proto",
    "ktor-client-contentNegotiation",
]